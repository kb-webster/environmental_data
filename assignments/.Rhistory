aes(group=1),colour="black") + theme_minimal()+
geom_point(size=2, shape=16)+ labs(
x="", y = "")+ scale_color_manual(values = c("grey88","grey70","grey52","grey34","grey4") , breaks= c("0", "2", "5", "9", "13"))+labs(color='HF Exposure (Days)')
HF10_ccmtip_f_plot <-ggplot(HF10.data, aes(x=f_tip, y=CCM_tip, color=time))+geom_smooth(method=lm, na.rm = TRUE, fullrange= TRUE, se=FALSE,
aes(group=1),colour="black") + theme_minimal()+
geom_point(size=2, shape=16)+ labs(
x="", y = "")+ scale_color_manual(values = c("grey88","grey70","grey52","grey34","grey4") , breaks= c("0", "2", "5", "9", "13"))+labs(color='HF Exposure (Days)')
HF10_ccmtip_f_plot <-ggplot(HF10.data, aes(x=f_tip, y=CCM_tip, color=time))+geom_smooth(method=lm, na.rm = TRUE, fullrange= TRUE, se=FALSE,
aes(group=1),colour="black") + theme_minimal()+
geom_point(size=2, shape=16)+ labs(
x="", y = "")+ scale_color_manual(values = c("grey88","grey70","grey52","grey34","grey4") , breaks= c("0", "2", "5", "9", "13"))+labs(color='HF Exposure (Days)')
HF10_ccmtip_f_plot <-ggplot(HF10.data, aes(x=f_tip, y=CCM_tip, color=time))+geom_smooth(method=lm, na.rm = TRUE, fullrange= TRUE, se=FALSE,
aes(group=1),colour="black") + theme_minimal()+
geom_point(size=2, shape=16)+ labs(
x="", y = "")+ scale_color_manual(values = c("grey88","grey70","grey52","grey34","grey4") , breaks= c("0", "2", "5", "9", "13"))+labs(color='HF Exposure (Days)')
HF10_ccmtip_f_plot
png(file="F10_ccm_f_plot.png",units="in", width = 7, height = 4, res = 500)
HF10_ccmtip_f_plot <-ggplot(HF10.data, aes(x=f_tip, y=CCM_tip, color=time))+geom_smooth(method=lm, na.rm = TRUE, fullrange= TRUE, se=FALSE,
aes(group=1),colour="black") + theme_minimal()+
geom_point(size=2, shape=16)+ labs(
x="", y = "")+ scale_color_manual(values = c("grey88","grey70","grey52","grey34","grey4") , breaks= c("0", "2", "5", "9", "13"))+labs(color='HF Exposure (Days)')
HF10_ccmtip_f_plot
dev.off()
data(iris)
head(iris)
data(iris)
head(iris)
iris$Sepal.Width
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
curve(
line_point_slope(
x,
data_center_x,
data_center_y,
-0.1),
add = TRUE)
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
##add the dot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
##add the line
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
plot(line_point_slope)
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
##add the dot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
##add the line
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
##add the line on the plot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
curve(
line_point_slope(
x,
data_center_x,
data_center_y,
-0.1),
add = TRUE)
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
##add the dot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
##add the line
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
##add the line on the plot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
curve(
line_point_slope(
x,
data_center_x,
data_center_y,
-0.1),
add = TRUE)
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
##add the dot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
##add the line
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
##add the line on the plot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
curve(
line_point_slope(
x,
data_center_x,
data_center_y,
-0.1),
add = TRUE)
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
##add the dot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
##create the line function
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
##add the line on the plot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
curve(
line_point_slope(
x,
data_center_x,
data_center_y,
-0.1),
add = TRUE)
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
##add the dot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
##create the line function
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
##add the line on the plot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
curve(
line_point_slope(
main="Katie's Very Floral Line", col.main="pink"
x,
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
##add the dot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
##create the line function
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
##add the line on the plot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
curve(
line_point_slope(
main="Katie's Very Floral Line", col.main="pink",
x,
data_center_x,
data_center_y,
-0.1),
add = TRUE)
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
##add the dot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
##create the line function
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
##add the line on the plot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
curve(
line_point_slope(
main="Katie's Very Floral Line",
x,
data_center_x,
data_center_y,
-0.1),
add = TRUE)
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
##add the dot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
##create the line function
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
##add the line on the plot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
curve(
line_point_slope(
x,
data_center_x,
data_center_y,
-0.1),
add = TRUE)
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
##add the dot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
##create the line function
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
##add the line on the plot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
curve(
line_point_slope(
x,
data_center_x,
data_center_y,
-0.1),
add = TRUE, main="Katie's Very Floral Line")
data(iris)
head(iris)
iris$Sepal.Width
mean(iris$Sepal.Length)
sd(iris$Sepal.Width)
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
data_center_x = mean(iris$Sepal.Width)
data_center_y = mean(iris$Sepal.Length)
c(data_center_x, data_center_y)
## [1] 3.057333 5.843333
##add the dot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length)
points(x = data_center_x, y = data_center_y, col = "red")
##create the line function
line_point_slope = function(x, x1, y1, slope)
{
get_y_intercept =
function(x1, y1, slope)
return(-(x1 * slope) + y1)
linear =
function(x, yint, slope)
return(yint + x * slope)
return(linear(x, get_y_intercept(x1, y1, slope), slope))
}
##add the line on the plot
plot(x = iris$Sepal.Width, y = iris$Sepal.Length, main="Katie's Very Floral Line")
points(x = data_center_x, y = data_center_y, col = "red")
curve(
line_point_slope(
x,
data_center_x,
data_center_y,
-0.1),
add = TRUE)
"Hello world, it's me Katie Webster"
getwd()
install.packages("palmerpenguins")
install.packages("palmerpenguins")
install.packages("here")
install.packages("palmerpenguins")
install.packages("here")
library("palmerpenguins")
install.packages("palmerpenguins")
install.packages("here")
library("palmerpenguins")
penguins = data.frame(penguins)
install.packages("palmerpenguins")
penguins = data.frame(penguins)
penguins = data.frame(penguins)
head(penguins)
penguins = data.frame(penguins)
head(penguins)
summary(penguins)
#make a boxplot
boxplot(penguins$bill_depth_mm)
#make a boxplot
boxplot(penguins$bill_depth_mm)
boxplot(bill_depth_mm ~ sex, data = penguins)
#make a boxplot
boxplot(penguins$bill_depth_mm)
boxplot(bill_depth_mm ~ sex, data = penguins)
par(mfrow = c(1, 2))
boxplot(penguins$bill_depth_mm)
boxplot(bill_depth_mm ~ sex, data = penguins)
#make a boxplot
boxplot(penguins$bill_depth_mm)
boxplot(bill_depth_mm ~ sex, data = penguins)
par(mfrow = c(1, 2))
boxplot(penguins$bill_depth_mm)
boxplot(bill_depth_mm ~ sex, data = penguins)
coplot(body_mass_g ~ bill_depth_mm | sex, data = penguins)
require(here)
png(filename = here("basic_histogram.png"), width = 800, height = 600)
hist(penguins$body_mass_g)
dev.off()
setwd("~/Documents/environmental_data/assignments")
require(here)
png(filename = here("basic_histogram.png"), width = 800, height = 600)
hist(penguins$body_mass_g)
dev.off()
require(here)
png(filename = here("basic_histogram.png"), width = 800, height = 600)
hist(penguins$body_mass_g)
dev.off()
